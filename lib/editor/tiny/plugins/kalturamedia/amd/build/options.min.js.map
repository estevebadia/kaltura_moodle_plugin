{"version":3,"file":"options.min.js","sources":["../src/options.js"],"sourcesContent":["import {getPluginOptionName} from 'editor_tiny/options';\nimport {pluginName} from './common';\n\n// Helper variables for the option names.\nconst constexidName = getPluginOptionName(pluginName, 'contextid');\nconst enabledName = getPluginOptionName(pluginName, 'enabled');\n\n/**\n * Options registration function.\n *\n * @param {tinyMCE} editor\n */\nexport const register = (editor) => {\n  const registerOption = editor.options.register;\n\n  // For each option, register it with the editor.\n  // Valid type are defined in https://www.tiny.cloud/docs/tinymce/6/apis/tinymce.editoroptions/\n  registerOption(constexidName, {\n      processor: 'number',\n  });\n  registerOption(enabledName, {\n    processor: 'boolean',\n  });\n};\n\n/**\n * Fetch the contextid value for this editor instance.\n *\n * @param {tinyMCE} editor The editor instance to fetch the value for\n * @returns {number} The contextid value\n */\nexport const contextid = (editor) => editor.options.get(constexidName);\n\n/**\n * Fetch the enabled value.\n * @param {tinyMCE} editor The editor instance to fetch the value for\n * @returns {boolean} The enabled value\n */\nexport const enabled = (editor) => editor.options.get(enabledName);"],"names":["constexidName","pluginName","enabledName","editor","registerOption","options","register","processor","get"],"mappings":"8OAIMA,eAAgB,gCAAoBC,mBAAY,aAChDC,aAAc,gCAAoBD,mBAAY,6BAO5B,SAACE,YACjBC,eAAiBD,OAAOE,QAAQC,SAItCF,eAAeJ,cAAe,CAC1BO,UAAW,WAEfH,eAAeF,YAAa,CAC1BK,UAAW,gCAUU,SAACJ,eAAWA,OAAOE,QAAQG,IAAIR,iCAOjC,SAACG,eAAWA,OAAOE,QAAQG,IAAIN"}